## Resultados obtenidos

### 1. Tiempos de ejecución de los algoritmos de ordenamiento
Se midieron los tiempos de ejecución de los algoritmos implementados (`Bubble Sort`, `Quicksort` y `Ordenamiento por Residuos`) 
para listas de diferentes tamaños. Los resultados obtenidos son los siguientes:

#### **Bubble Sort**
| Tamaño de la lista | Tiempo de ejecución (segundos)|
|---------------------|------------------------------|
| 1                   | 0.000003                     |
| 10                  | 0.000013                     |
| 100                 | 0.000921                     |
| 200                 | 0.002418                     |
| 500                 | 0.014152                     |
| 700                 | 0.033929                     |
| 1000                | 0.067402                     |
#### **Quicksort**
| Tamaño de la lista | Tiempo de ejecución (segundos)|
|---------------------|------------------------------|
| 1                   | 0.000004                     |
| 10                  | 0.000026                     |
| 100                 | 0.000138                     |
| 200                 | 0.000248                     |
| 500                 | 0.000857                     |
| 700                 | 0.001093                     |
| 1000                | 0.001797                     |

#### **Ordenamiento por Residuos**
| Tamaño de la lista | Tiempo de ejecución (segundos)|
|---------------------|------------------------------|
| 1                   | 0.000026                     |
| 10                  | 0.000037                     |
| 100                 | 0.000075                     |
| 200                 | 0.000182                     |
| 500                 | 0.000321                     |
| 700                 | 0.000587                     |
| 1000                | 0.000602                     |
---

### 2. Observaciones
- **Bubble Sort**: Es el algoritmo más lento, especialmente para listas grandes, debido a su complejidad de tiempo O(n²).
- **Quicksort**: Es significativamente más rápido que Bubble Sort, con una complejidad promedio de O(n log n).
- **Ordenamiento por Residuos**: Tiene una complejidad promedio de O(n log n), pero depende de las características de los datos.
---